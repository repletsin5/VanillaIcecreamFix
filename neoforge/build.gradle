plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}
repositories {
    maven {
        url "https://maven.neoforged.net/releases/"
    }
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

loom {
    neoForge {
        mixin {
            "vanillafix.crashui.mixins.json"
        }
    }
}
configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    neoForge "net.neoforged:neoforge:${rootProject.neoforge_version}"
    // Remove the next line if you don't want to depend on the API
    //modApi "dev.architectury:architectury-neoforge:${rootProject.architectury_version}"
    modApi("me.shedaniel.cloth:cloth-config-neoforge:13.0.121")
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "quilt.mod.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    inputFile.set(shadowJar.archiveFile)
    dependsOn shadowJar
    archiveClassifier.set(null)
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}
